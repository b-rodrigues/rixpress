% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derivs.R
\name{rxp_py}
\alias{rxp_py}
\title{Create a Nix derivation for Python code execution}
\usage{
rxp_py(name, py_expr, nix_env = "default.nix")
}
\arguments{
\item{name}{A symbol representing the name of the variable to be serialized
and the derivation name. It must be a valid Python variable name (e.g., no dots).}

\item{py_expr}{A string containing the Python expression to be assigned to
the variable specified by \code{name}. The function will execute \verb{<name> = <py_expr>}
in Python.}

\item{nix_env}{The path to the Nix environment file (default: "default.nix").
This file should define the Python packages required for the derivation.}
}
\value{
A list containing the derivation name, the Nix derivation snippet,
the type of derivation ("rxp_py"), and the Nix environment setup code.
}
\description{
This function generates a Nix derivation that executes a given Python
expression and serializes the result using Python's \code{pickle} module. The
derivation is designed to work with Python environments defined in a
\code{default.nix} file.
}
\examples{
# Generate a derivation that assigns 42 to 'my_result' and pickles it
rxp_py(my_result, "42")
# The generated Python code will be:
# exec(open('libraries.py').read()); exec('my_result = 42');
# import pickle; with open('my_result.pickle', 'wb') as f:
#     pickle.dump(globals()['my_result'], f)
}
