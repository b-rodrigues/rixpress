% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rixpress.R
\name{rixpress}
\alias{rixpress}
\title{Generate Nix Pipeline Code with a Generic Default Target}
\usage{
rixpress(derivs, project_path)
}
\arguments{
\item{derivs}{A list of derivation objects, where each object is a list of
five elements:
- \verb{$name}, character, name of the derivation
- \verb{$snippet}, character, the nix code snippet to build this derivation
- \verb{$type}, character, can be R, Python or Quarto
- \verb{$additional_files}, character vector of paths to files to make
available to build sandbox
- \verb{$nix_env}, character, path to Nix environment to build this derivation
A single deriv is the output of \code{rxp_r()}, \code{rxp_quarto()} or \code{rxp_py()}
function.}

\item{project_path}{Path to root of project, typically "."}
}
\value{
A character string containing the complete Nix code for a
\code{pipeline.nix} file. This string can be written to a file or passed to
another function for further processing.
}
\description{
This function generates a string containing Nix code for a \code{pipeline.nix} file
based on a list of derivation objects. Each derivation is defined by a snippet
of Nix code and a name, typically created using a function like \code{rxp_r}. The
resulting Nix code defines all derivations and sets a generic default target
that builds all of them using \code{pkgs.symlinkJoin}. This is designed for
building reproducible analytical pipelines with Nix, inspired by the
\code{targets} R package.
}
\details{
The generated Nix code includes:
\itemize{
\item A \code{default.nix} import for environment setup via the \code{rix} package.
\item A \code{makeRDerivation} function to standardize derivation creation.
\item All derivations from the \code{derivs} list.
\item A default target (\code{allDerivations}) that builds all derivations when
\verb{nix-build pipeline.nix} is run without specifying an attribute.
}

The function assumes the existence of a \code{libraries.R} file in the working
directory, which is copied into the build environment by the Nix code.
}
\examples{
\dontrun{
# Create derivation objects
d1 <- rxp_r(mtcars_am, filter(mtcars, am == 1))
d2 <- rxp_r(mtcars_head, head(mtcars_am))
list_derivs <- list(d1, d2)

# Generate the pipeline code
rixpress(derivs = list_derivs, project_path = ".")

}
}
