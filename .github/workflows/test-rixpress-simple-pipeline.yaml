# Integration tests for making pipeline
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: test-rixpress-simple-pipeline

permissions:
  contents: write

jobs:
  devtools:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Create this folder to silence warning
        run: mkdir -p ~/.nix-defexpr/channels

      - uses: cachix/cachix-action@v15
        with:
          name: rstats-on-nix

      - name: Generate pipeline.nix
        run: |
          nix-shell --quiet --run "cd data-raw && Rscript -e \"devtools::load_all();source('gen_pipeline.R')\""

      - name: Check generated default.nix
        run: cat data-raw/pipeline.nix

      - name: Check DAG
        run: |
          nix-shell --quiet -p haskellPackages.stacked-dag --run "cd data-raw && stacked-dag dot dag.dot"

      - name: Make pipeline
        run: |
          nix-shell --quiet --run "cd data-raw && Rscript -e \"devtools::load_all();rixpress::rxp_make()\""
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if directory exists
        run: |
          if [ ! -d "data-raw/result" ]; then
            echo "Error: Directory 'pipeline failed!' does not exist."
            exit 1
          fi
